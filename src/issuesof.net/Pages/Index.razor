@page "/"

@if (TrieService.Exeption is not null)
{
    <div class="alert alert-danger">
        @if (IsDevelopment)
        {
            <pre>@TrieService.Exeption.ToString()</pre>
        }
        else
        { 
            <text>An error during loading occured.</text>
        }
    </div>
}
else @if (TrieService.Index is null)
{
    <div class="alert alert-secondary">
        <div class="spinner-border text-secondary" role="status">
            <span class="sr-only">Loading...</span>
        </div>
        <div class="mt-2">
            @TrieService.ProgressText
        </div>
    </div>
}
else
{
    <form>
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Filter</button>
                <div class="dropdown-menu small">
                    <button class="dropdown-item" href="#" @onclick:preventDefault @onclick="() => ShowHelp = !ShowHelp">@(ShowHelp ? "Hide" : "Show") syntax help</button>
                    <div role="separator" class="dropdown-divider"></div>
                    <a class="dropdown-item" target="_blank" href="https://docs.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests">GitHub syntax reference</a>
                </div>
            </div>
            <div class="form-control query-editor">
                <input id="myTextarea" type="text" class="form-control" placeholder="Search" />
            </div>
        </div>
    </form>

    @if (ShowHelp)
    {
        <div class="alert alert-info">
            <h4 class="alert-heading">Query Syntax</h4>
            <p>
                The following query synatx is recognized:
            </p>
            <dl class="row">
                <dt class="col-sm-3"><code>is:open</code></dt>
                <dd class="col-sm-9">Only shows open issues</dd>
                <dt class="col-sm-3"><code>is:closed</code></dt>
                <dd class="col-sm-9">Only shows closed issues</dd>
                <dt class="col-sm-3"><code>is:issue</code></dt>
                <dd class="col-sm-9">Only shows issues</dd>
                <dt class="col-sm-3"><code>is:pr</code></dt>
                <dd class="col-sm-9">Only shows pull requests</dd>
                <dt class="col-sm-3"><code>is:merged</code></dt>
                <dd class="col-sm-9">Only shows merged pull requests</dd>
                <dt class="col-sm-3"><code>org:{org}</code></dt>
                <dd class="col-sm-9">Only shows issues of the given org</dd>
                <dt class="col-sm-3"><code>repo:{repo}</code></dt>
                <dd class="col-sm-9">Only shows issues of the given repo</dd>
                <dt class="col-sm-3"><code>author:{user}</code></dt>
                <dd class="col-sm-9">Only shows issues created by the given user</dd>
                <dt class="col-sm-3"><code>assignee:{user}</code></dt>
                <dd class="col-sm-9">Only shows issues assigned to the given user</dd>
                <dt class="col-sm-3"><code>label:{label}</code></dt>
                <dd class="col-sm-9">Only shows issues with the given label</dd>
                <dt class="col-sm-3"><code>area:{area}</code></dt>
                <dd class="col-sm-9">Only shows issues with a label of <code>area-{area}</code></dd>
                <dt class="col-sm-3"><code>area-under:{area}</code></dt>
                <dd class="col-sm-9">Only shows issues with a label of <code>area-{area}</code>, which includes other labels with that prefix</dd>
                <dt class="col-sm-3"><code>milestone:{milestone}</code></dt>
                <dd class="col-sm-9">Only shows issues with the given milestone</dd>
                <dt class="col-sm-3"><code>no:assignee</code></dt>
                <dd class="col-sm-9">Only shows issues assigned to nobody</dd>
                <dt class="col-sm-3"><code>no:milestone</code></dt>
                <dd class="col-sm-9">Only shows issues with no milestone</dd>
                <dt class="col-sm-3"><code>no:label</code></dt>
                <dd class="col-sm-9">Only shows issues with no labels</dd>
            </dl>
            <p>
                All query terms are implicitly combined with a logical <code>AND</code>. You can also
                combine queries using <code>OR</code> and <code>NOT</code>, such as:
            </p>
            <pre><code>org:dotnet (author:terrajobst OR author:jaredpar) NOT (label:api-ready-for-review OR label:api-needs-work)</code></pre>
            <p>
                This will show all issues in the <code>dotnet</code> org that were created by either
                <code>terrajobst</code> or <code>jaredpar</code>, and aren't labelled as
                <code>api-ready-for-review</code> or <code>api-needs-work</code>.
            </p>
            <p>
                You can also use the simple <code>-</code> prefix instead of <code>NOT</code>, so this
                will show all open issues that aren't labelled as bugs:
            </p>
            <pre><code>is:open is:issue -label:bug</code></pre>
        </div>
    }

    <div class="bg-light p-2 rounded-top text-secondary">
        @($"{SearchResults.TotalCount:N0} issues")
    </div>

    <table class="table table-hover">
        <tbody>
            @foreach (var issue in SearchResults.GetPage(PageNumber))
            {
                <tr>
                    <td>
                        @{
                            var isClosed = !issue.IsOpen;
                            var isPr = issue.IsPullRequest;
                            var isDraft = issue.IsDraft;
                            var isMerged = issue.IsMerged;
                            var textColor = isMerged
                                                ? "text-merged"
                                                : isClosed
                                                    ? "text-danger"
                                                    : isDraft
                                                        ? "text-secondary"
                                                        : "text-success";

                            var icon = isMerged
                                        ? "octicon:git-merge-16"
                                        : isPr
                                            ? "octicon:git-pull-request-16"
                                            : isClosed
                                                ? "octicon:issue-closed-16"
                                                : "octicon:issue-opened-16";

                            var title = (isPr, isDraft, isMerged, isClosed) switch
                            {
                                (true, false, false, false) => "Open PR",
                                (true, true, false, false) => "Open Draft PR",
                                (true, _, true, _) => "Merged PR",
                                (true, _, false, true) => "Closed PR",
                                (false, _, _, false) => "Open Issue",
                                _ => "Closed Issue"
                            };
                        }
                        <span class="iconify @textColor" data-icon="@icon" data-inline="false" title="@title"></span>
                    </td>
                    <td class="w-100 p-2">
                        <div>
                            <a class="gh-issue-title" href="@issue.Url">@issue.Title.AsInlineMarkdown()</a>
                            <span>
                                @foreach (var label in issue.Labels)
                                {
                                    <span class="gh-label"
                                          title="@label.Description"
                                          style="background: @("#" + label.BackgroundColor); color: @label.ForegroundColor">@label.Name</span>
                                }
                            </span>
                        </div>
                        <div class="small text-muted">
                            @if (isMerged)
                            {
                                <text>@issue.Repo.Org/@issue.Repo.Name#@issue.Number by @issue.CreatedBy was merged @issue.ClosedAt.Humanize()</text>
                            }
                            else if (isClosed)
                            {
                                <text>@issue.Repo.Org/@issue.Repo.Name#@issue.Number by @issue.CreatedBy was closed @issue.ClosedAt.Humanize()</text>
                            }
                            else
                            {
                                <text>@issue.Repo.Org/@issue.Repo.Name#@issue.Number opened by @issue.CreatedBy @issue.CreatedAt.Humanize()</text>
                            }

                            @if (issue.Milestone != null)
                            {
                                <span class="ml-2 mr-1 oi oi-signpost text-muted" aria-hidden="true"></span><span title="@issue.Milestone.Description">@issue.Milestone.Title</span>
                            }
                        </div>
                    </td>
                    <td>
                        @if (issue.Comments > 0)                     
                        {
                            <span class="text-nowrap text-muted">
                                <span class="iconify" data-icon="octicon:comment-16" data-inline="false"></span> @issue.Comments
                            </span>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @if (SearchResults.PageCount > 1)
    {
        <ul class="pagination justify-content-center">
            @{
                var previousDisabled = PageNumber > 1 ? "" : "disabled";
                var nextDisabled = PageNumber < SearchResults.PageCount ? "" : "disabled";
                var pageIndex = PageNumber - 1;
                var lastPageIndex = SearchResults.PageCount - 1;

                var middle = new Range(Math.Max(0, pageIndex - 2),
                                       Math.Min(lastPageIndex, pageIndex + 3));

                if (middle.Start.Value < 4)
                    middle = new Range(0, middle.End);

                if (middle.End.Value - 1 > lastPageIndex - 4)
                    middle = new Range(middle.Start, lastPageIndex + 1);

                if (middle.GetOffsetAndLength(lastPageIndex + 1).Length < 5)
                {
                    if (middle.Start.Value == 0)
                        middle = new Range(0, Math.Min(4, lastPageIndex) + 1);
                    else
                        middle = new Range(Math.Max(lastPageIndex - 4, 0), lastPageIndex + 1);
                }

                var left = middle.Start.Value == 0
                    ? new Range(0, 0)
                    : new Range(0, 2);

                var right = middle.End.Value - 1 == lastPageIndex
                    ? new Range(lastPageIndex, 0)
                    : new Range(lastPageIndex - 1, lastPageIndex + 1);

                <li class="page-item @previousDisabled">
                    <a class="page-link" href="#" tabindex="-1" @onclick:preventDefault @onclick="() => PageNumber--">Previous</a>
                </li>

                for (var i = left.Start.Value; i < left.End.Value; i++)
                {
                    var pageNumber = i + 1;
                    <li class="page-item">
                        <a class="page-link" href="#" @onclick:preventDefault @onclick="() => PageNumber = pageNumber">@pageNumber</a>
                    </li>
                }

                if (left.End.Value < middle.Start.Value)
                {
                    <li class="page-item">
                        <a class="page-link disabled">...</a>
                    </li>
                }

                for (var i = middle.Start.Value; i < middle.End.Value; i++)
                {
                    var pageNumber = i + 1;
                    var active = pageNumber == PageNumber ? "active" : "";
                    <li class="page-item @active">
                        <a class="page-link" href="#" @onclick:preventDefault @onclick="() => PageNumber = pageNumber">@pageNumber</a>
                    </li>
                }

                if (middle.End.Value < right.Start.Value)
                {
                    <li class="page-item">
                        <a class="page-link disabled">...</a>
                    </li>
                }

                for (var i = right.Start.Value; i < right.End.Value; i++)
                {
                    var pageNumber = i + 1;
                    <li class="page-item">
                        <a class="page-link" href="#" @onclick:preventDefault @onclick="() => PageNumber = pageNumber">@pageNumber</a>
                    </li>
                }

                <li class="page-item @nextDisabled">
                    <a class="page-link" href="#" @onclick:preventDefault @onclick="() => PageNumber++">Next</a>
                </li>
            }
        </ul>
    }
}
